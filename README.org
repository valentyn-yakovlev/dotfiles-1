#+title: ~/.config/dotfiles

#+begin_example
$ [[ -d ~/.config ]] || mkdir ~/.config && cd ~/.config
$ git clone --recursive git@github.com:eqyiel/dotfiles.git && cd dotfiles
$ ./go.py --stow --all
#+end_example

* JS
** =yarn=
   =yarn= is the only package that should be installed globally with =npm=.

   This might change in the future because it
   [[https://github.com/NixOS/nixpkgs/commit/b217c0a99ba22371b2a73821a8e127892f2e24d4][just
   landed]] in =nixpkgs=.

   At that time the symlinks =${HOME}/.local/bin/{yarn,yarnpkg}= should be
   removed.  The same goes for other global packages that could be managed by
   =nix=.

** =eslint-cli=

   Use this instead of global installation of =eslint=.  It will find a
   project's local version of =eslint= and run that.

   #+begin_example
   $ yarn global add eslint-cli
   #+end_example

** =tern=

   Don't forget to add =.tern-port= to your =.gitignore=.

   #+begin_example
   $ yarn global add tern
   #+end_example

** =nvm=
   I used to use =nvm= at work to manage the transient global =node= version.
   It turns out that
   [[http://anderspapitto.com/posts/2016-10-04-transient-global-environments-the-third-path.html][Nix
   does this much better]].

   So just use =nix-env --query= to see what versions of =node= are available in
   the current profile, =nix-env --query --available nodejs= to see what
   versions are available and so on.

* OSX Gotchas

  We're locked into Apple at work.  Use virtual machine to get actual
  work done.  There's some stuff you can do to make life more
  comfortable on the host though.

  Install homebrew and:

  #+begin_example
  $ brew tap homebrew/versions
  $ brew install homebrew/versions/gnupg21
  $ brew install pass stow
  $ brew cask install virtualbox chromium slack 1password transmit harvest sketch iterm2
  #+end_example

  For the virtual machine, set interface 1 to NAT, second to bridged adapter.
  You can SSH to the ip address of the bridged adapter's interface.

** Karabiner-Elements

   [[https://www.nadeau.tv/configure-hyper-key-osx/][I used to do something like this]] to fake a hyper key, but Karabiner
   and Seil don't work properly in Sierra.
  
   [[https://github.com/tekezo/Karabiner-Elements/pull/170][Keep an eye on the shitstorm here]].  If that gets resolved we can probably use
   karabiner-elements from ~brew cask~.

** 1password

   1password doesn't like Chromium.  Install the OSX app and go to preferences →
   advanced → uncheck verify browser code signature.

** =Terminal.app=                                                    :ATTACH:
   :PROPERTIES:
   :ID:       C20586D7-52CA-4AF4-9065-BC70C4C5BB96
   :Attachments: osx-terminal_2016-09-26_10-03-02.png
   :END:
*** Rescue Meta

   Make sure "Use Option as Meta key" is checked.
   #+DOWNLOADED: file:/Users/rkm/Desktop/osx-terminal.png @ 2016-09-26 10:03:03
   [[file:data/C2/0586D7-52CA-4AF4-9065-BC70C4C5BB96/osx-terminal_2016-09-26_10-03-02.png]]
** iTerm2
*** Rescue Meta                                                      :ATTACH:

    :PROPERTIES:
    :ID:       69648A9D-1C24-447A-9FBF-88C649315B0F
    :Attachments: iterm2_2016-09-26_10-04-21.png
    :END:
    Make sure options "Left option key acts as..." are set to ~+Esc~.

    #+DOWNLOADED: file:/Users/rkm/Desktop/iterm2.png @ 2016-09-26 10:04:21
    [[file:data/69/648A9D-1C24-447A-9FBF-88C649315B0F/iterm2_2016-09-26_10-04-21.png]]
*** Rescue clipboard                                                 :ATTACH:
    :PROPERTIES:
    :ID:       1B1C9326-036A-438B-837D-38C365CEE7F6
    :Attachments: iterm2-clipboard_2016-10-12_09-28-47.png
    :END:

    Make sure 'Applications in terminal may access clipboard' is checked.

    #+DOWNLOADED: file:/Users/rkm/Desktop/iterm2-clipboard.png @ 2016-10-12 09:28:47
    [[file:data/1B/1C9326-036A-438B-837D-38C365CEE7F6/iterm2-clipboard_2016-10-12_09-28-47.png]]
