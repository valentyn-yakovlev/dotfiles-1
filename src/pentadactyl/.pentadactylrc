" ~/.pentadactylrc

set runtimepath=~/.pentadactyl

" loadplugins '\.(js|penta)$'
group user
command! -nargs=* wiki tabopen wikipedia <args>
command! -nargs=* site-search js site_search('<args>');
:js <<EOJS
  site_search = function(s) {
    var url = 'https://www.google.com/search?q=site:'
            + encodeURIComponent(content.wrappedJSObject.location)
            + ' ' + s
    content.wrappedJSObject.location = url;
  }
EOJS

" command! -nargs=* delete-next-word js delete_next_word();
" :js <<EOJS
"   delete_next_word = function () {
"     editor.executeCommand("cmd_deleteWordForward", 1);
"     };
" EOJS

" keybinding legend:
" n     normal mode
" v     visual mode
" I     input mode
" i     insert mode
" C     command mode
" c     command line mode
" caret caret-mode

"""

" execute-extended-command
  map -modes=n,v <A-x> -builtin :
  map -modes=i <A-x> -builtin <Esc>:

" shell-command
  map -modes=n,v <A-!> -builtin :run<Space>

" eval-expression
" to execute js in the context of the current buffer, like in mozilla's web console
" :js content.wrappedJSObject.candies.nbrOwned = 1
  map -modes=n,v <A-:> -builtin :js<Space>content.wrappedJSObject.
  map -modes=n,v <C-u><A-:> -builtin :js<Space>

""" editing commands

" forward-char
  map -modes=i <C-f> -builtin <Right>
  map -modes=c <C-f> <Right>

" backward-char
  map -modes=i <C-b> -builtin <Left>
  map -modes=c <C-b> <Left>

" subword-forward
  map -modes=i,c,caret <A-f> -builtin <C-Right>

" subword-backward
  map -modes=i,c,caret <A-b> -builtin <C-Left>

" implemented in chrome/common/content/editor.js
"   subword-kill
"   map -modes=i,c,caret,n,v <A-d> -builtin <C-DEL>
" map -modes=i,c,caret,n,v <A-d> -builtin delete-next-word

" subword-backward-kill
  map -modes=i,c,caret <A-BS> -builtin <C-BS>
  map -modes=i,c,caret <A-BS> -builtin <C-w>

" move-beginning-of-line
" map -modes=n,v <C-a> -builtin 0

" move-end-of-line
" map -modes=n,v <C-e> -builtin $

" previous-line
  map -modes=n,v <C-p> -builtin k
  map -modes=c <C-p> <S-Tab>
  map -modes=i <C-p> -builtin <Up>

" next-line
  map -modes=n,v <C-n> -builtin j
  map -modes=c <C-n> <Tab>
  map -modes=i <C-n> -builtin <Down>

" yank
  map -modes=c,i <C-y> -builtin <S-Insert>

" newline-and-indent (synonym for RET here)
  map -modes=n,v <C-j> -builtin <Return>
  map -modes=i <C-j> -builtin <Return>

" select all
  map -modes=i,n,v <C-x>h -builtin <C-z><C-a><Esc>

" record-macro
  map -modes=n,v <C-x>( -builtin q
  map -modes=i <C-x>( -builtin <Esc>q
  map -modes=n,v <F3> -builtin q
  map -modes=i <F3> -builtin <Esc>q

" play-macro
  map -modes=n,v <C-x>e -builtin @
  map -modes=i <C-x>e -builtin <Esc>@
  map -modes=n,v <F4> -builtin @
  map -modes=i <F4> -builtin <Esc>@

""" buffer navigation

" quit
  map -modes=n,v <C-x><C-c> -builtin :xall<Return>
  map -modes=i <C-x><C-c> -builtin <Esc>:xall<Return>

" back
  map -modes=n,v l -builtin :back<Return>
  map -modes=n,v B -builtin :back<Return>

" forward
  map -modes=n,v F -builtin :forward<Return>

" buffer-previous
  map -modes=n,v <A-p> -builtin :tabprevious<Return>

" buffer-next
  map -modes=n,v <A-n> -builtin :tabnext<Return>

" scroll-up-command (page down)
  map -modes=n,v <C-v> -builtin <PageDown>

" scroll-down-command (page up)
  map -modes=n,v <A-v> -builtin <PageUp>
  map -modes=n,v <S-Space> -builtin <PageUp>

" beginning-of-buffer
  map -modes=n,v <A-lt> -builtin gg

" end-of-buffer
  map -modes=n,v <A->> -builtin G

" kill-buffer
  map -modes=n,v q -builtin :quit<Return>
  map -modes=n,v <C-x>k -builtin :tabclose<Return>
  map -modes=i <C-x>k -builtin <Esc>:tabclose<Return>
  map -modes=n,v <C-x>0 -builtin :tabclose<Return>
  map -modes=i <C-x>0 -builtin <Esc>:tabclose<Return>

" delete-window
  map -modes=n,v <C-x>50 -builtin :winclose<Return>
  map -modes=i <C-x>50 -builtin <Esc>:winclose<Return>

" delete-other-windows (kill all other tabs but this one)
  map -modes=n,v <C-x>1 -builtin :tabonly<Return>
  map -modes=i <C-x>1 -builtin <Esc>:tabonly<Return>

" delete-other-frames (kill all windows but this one)
  map -modes=n,v <C-x>51 -builtin :winonly<Return>
  map -modes=i <C-x>51 -builtin <Esc>:winonly<Return>

" split-window-below (open this buffer in a new tab)
  map -modes=n,v <C-x>2 -builtin T<Return>
  map -modes=i <C-x>2 -builtin <Esc>T<Return>

" make-frame-command  (open this buffer in a new window)
  map -modes=n,v <C-x>52 -builtin W<Return>
  map -modes=i <C-x>52 -builtin <Esc>W<Return>

" find-url-new-buffer
  map -modes=n,v <C-x><C-f> -builtin :tabopen<Space>
  map -modes=i <C-x><C-f> -builtin <Esc>:tabopen<Space>
  map -modes=n,v <C-x>4f -builtin :tabopen<Space>
  map -modes=i <C-x>4f -builtin <Esc>:tabopen<Space>

" find-url-new-window
  map -modes=n,v <C-x>5f -builtin :winopen<Space>
  map -modes=i <C-x>5f -builtin <Esc>:winopen<Space>
  map -modes=n,v <C-u><C-x><C-f> -builtin :winopen<Space>
  map -modes=i <C-u><C-x><C-f> -builtin <Esc>:winopen<Space>

" find-alternate-url
  map -modes=n,v <C-x><C-v> -builtin O<C-a><C-Right><Right>
  map -modes=i <C-x><C-v> -builtin <Esc>O<C-a><C-Right><Right>

" follow-new-buffer
  map -modes=n,v <C-u>f -builtin ;t
  map -modes=i <C-u>f -builtin <Esc>;t

" follow-new-window
  map -modes=n,v <C-u><C-u>f -builtin ;w
  map -modes=i <C-u><C-u>f -builtin <Esc>;w

" copy hint location
  map -modes=n,v c -builtin ;y

" save hint as
  map -modes=n,v s -builtin ;s

" copy (this buffer's url)
  map  -modes=n,v <C-w> -builtin y

" copy (highlighted text)
  map -modes=n,v <A-w> -builtin y

" yank url from kill ring and visit in this buffer
  map -modes=n,v <C-y> -builtin P

" jump to last buffer
  map -modes=n,v <C-x><C-x> -builtin <C-^>
  map -modes=i <C-x><C-x> -builtin <Esc><C-^>
  map -modes=n,v <C-x>o -builtin <C-6>
  map -modes=i <C-x>o -builtin <Esc><C-6>

" switch-to-buffer
  map -modes=n,v <C-x>b -builtin :buffer<Space>
  map -modes=i <C-x>b -builtin <Esc>:buffer<Space>
  map -modes=n,v <C-x><C-b> -builtin :buffer<Space>
  map -modes=i <C-x><C-b> -builtin <Esc>:buffer<Space>

" revive-buffer
  map -modes=n,v <C-u>q -builtin :undo<Return>
  map -modes=i <C-u>q -builtin <Esc>:undo<Return>
  " map -modes=n,v <C-_> -builtin :undo<Return>
  " map -modes=n,v <C-x>u -builtin :undo<Return>
  " map -modes=n,v <C-/> -builtin :undo<Return>

" isearch-forward
  map -modes=n,v <C-s> -builtin /

" isearch-backward
  map -modes=n,v <C-r> -builtin ?
  " there is no "find" mode, stick with nN for now like less
  " map -modes=f <C-s> -builtin n
  " map -modes=f <C-r> -builtin N

" bookmark
  map -modes=n,v b -builtin a

" focus last used input field
  map -modes=n,v <C-c>i -builtin gi

" view source in external editor
  map -modes=n,v <C-c>\\ -builtin gF
  map -modes=i <C-c>\\ -builtin <Esc>gF

" open hint's context menu
  map -modes=n,v <F10> -builtin ;c

" open directory (or file)
  map -modes=n,v <C-x>d -builtin :open<Space>file:///home/eqyiel/
  map -modes=i <C-x>d -builtin <Esc>:open<Space>file:///home/eqyiel/

" go up a directory
  map -modes=n,v u -builtin <open-parent-path>

" go to the root directory
  map -modes=n,v U -builtin <open-root-path>

" cancel or stop loading depending on context
  map -modes=n <C-g> -builtin <stop-load>
  map -modes=v,i,c <C-g> -builtin <Esc>

""" misc

" save hint
  map -modes=n,v s -builtin ;s

" view-referenced-source-code
  map -modes=n,v \\ -builtin :viewsource<Return>

" reveal firefox ui
  map -modes=n,v <A-Down> -builtin :set<Space>go+=BTm<Return>
  map -modes=i <A-Down> -builtin <Esc>:set<Space>go+=BTm<Return>

" hide it again
  map -modes=n,v <A-Up> -builtin :set<Space>go-=BTm<Return>
  map -modes=i <A-Up> -builtin <Esc>:set<Space>go-=BTm<Return>

" info
" for some reason dactyl://help/index is empty
  map -modes=n,v <C-h>i -builtin o<Space>http://5digits.org/help/pentadactyl/index.xhtml<Return>
  map -modes=i <C-h>i -builtin <Esc>o<Space>http://5digits.org/help/pentadactyl/index.xhtml<Return>

" tutorial
  map -modes=n,v <C-h>t -builtin o<Space>dactyl://help/tutorial<Return>
  map -modes=i <C-h>t -builtin <Esc>o<Space>dactyl://help/tutorial<Return>

" bookmark-set (set mark at cursor position)
  map -modes=n,v <C-x>rm -builtin m
  map -modes=i <C-x>rm -builtin <Esc>m

" bookmark-jump (jump to mark in current buffer)
  map -modes=n,v <C-x>rb -builtin '
  map -modes=i <C-x>rb -builtin <Esc>'

" bookmark-bmenu-list (list marks)
  map -modes=n,v <C-x>rl -builtin :marks<Return>
  map -modes=i <C-x>rl -builtin <Esc>:marks<Return>

" pass-next-key
  map -modes=n,v,i <C-q> -builtin <pass-next-key>

" pass-all-keys
  map -modes=n,v,i <A-C-q> -builtin <pass-all-keys>

""" annoying

  map -modes=n,v s -builtin <Nop>
  map -modes=n,v p -builtin <Nop>
  map -modes=n,v P -builtin <Nop>
  map -modes=n,v <C-x> -builtin <Nop>
  map -modes=n,v <C-d> -builtin <Nop>
  map -modes=n,v gh -builtin <Nop>
  map -modes=n,v D <Nop>
  map -modes=n,v w <Nop>
  map -modes=n,v W <Nop>
  map -modes=n,v <C-u> <Nop>
  map -modes=n,v <C-z> <Nop>
  map -modes=n,v t <Nop>
  map -modes=n,v d <Nop>
  map -modes=n,v a <Nop>

"""
" set activate=addons,bookmarks,diverted,extoptions,help,homepage,quickmark
" set autocomplete=
" set activate=all " dumb!
set activate=addons,bookmarks,diverted,downloads,extoptions,help,homepage,quickmark,tabopen,paste
set editor='emacsclient -c'
set defsearch=duckduckgo
"""

" dumb
" map -modes=n,v <C-d> -builtin <C-v>
" map -modes=n,v <C-f> -builtin :forward<Return>
" map -modes=n,v <C-b> -builtin :back<Return>
" map -modes=n,v <C-Left> :tabmove!<Space>-1<Return>
" map -modes=n,v <C-Right> :tabmove!<Space>+1<Return>
" map -modes=n,v <C-A-y> -builtin :tabopen!<Space><S-Insert><Return>
" map -modes=n,v <C-q> -builtin :stop<Return>
" map -modes=n,v <C-x>s -builtin :xall<Return>
" map -modes=n,v <C-x>t -builtin :tabopen<Space>
" map -modes=n,v <C-x>T -builtin T
" map -modes=n,v <C-x><C-t> -builtin :tabopen!<Space>
" map -modes=n,v L -builtin F
" map -modes=n,v <A-l> -builtin ;t
" map -modes=n,v <C-x>l -builtin ;t
" map -modes=n,v <C-h>r -builtin :help<Return>
" map -modes=n,v <C-h>I -builtin o<Space>http://www.jnanam.net/pentadactylemacs/pentadactylemacs.html<Return>
" map -modes=n,v <C-x><C-g> -builtin <Esc>
" map -modes=n,v <C-x><C-w> <C-d><C-s>
" map -modes=n,v <C-c>a <C-d><C-d>
" map -modes=n,v <C-c>q :bmarks<Space>
" map -modes=n,v <C-c>w :bmarks<Space>-tags=
" map -modes=n,v d :dialog<Space>
" map -modes=n,v <C-c>g gf
" map -modes=n,v <C-c>p -builtin ;i
" map -modes=n,v <C-c>h -builtin gh
" map -modes=n,v <C-c><C-r> :restart<Return>
" map -modes=n,v u <Nop>
" map -modes=v <C-x>h -builtin <C-z><C-a><Esc>
" map -modes=n,v <C-c>b :set<Space>invbuftabs<Return>
" map -modes=n,v <C-c>s :noscript<Space>toggletemp<Return>
" map -modes=n,v <C-c>S :noscript<Space>popup<Return>

" no emacs/conkeror equivalent
" map -modes=n,v <A-s> -builtin *
" map -modes=n,v <A-r> -builtin #
